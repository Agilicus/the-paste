(function(){var t,e,n,a,o;t=window.jQuery,t.paste=function(t){var n;return"undefined"!=typeof console&&null!==console&&console.log("DEPRECATED: This method is deprecated. Please use $.fn.pastableNonInputable() instead."),n=e.mountNonInputable(t),n._container},t.fn.pastableNonInputable=function(){var n,a,o,r;for(r=this,a=0,o=r.length;a<o;a++)n=r[a],n._pastable||t(n).is("textarea, input:text, [contenteditable]")||(e.mountNonInputable(n),n._pastable=!0);return this},t.fn.pastableTextarea=function(){var n,a,o,r;for(r=this,a=0,o=r.length;a<o;a++)n=r[a],n._pastable||t(n).is(":not(textarea, input:text)")||(e.mountTextarea(n),n._pastable=!0);return this},t.fn.pastableContenteditable=function(){var n,a,o,r;for(r=this,a=0,o=r.length;a<o;a++)n=r[a],n._pastable||t(n).is(":not([contenteditable])")||(e.mountContenteditable(n),n._pastable=!0);return this},a=function(t,e){var n,a,o,r,i,u,s,l,c,d,p;if(null==e&&(e=512),!(l=t.match(/^data\:([^\;]+)\;base64\,(.+)$/)))return null;for(d=l,l=d[0],u=d[1],n=d[2],r=atob(n),o=[],c=0;c<r.length;){for(p=r.slice(c,c+e),i=new Array(p.length),s=0;s<p.length;)i[s]=p.charCodeAt(s),s++;a=new Uint8Array(i),o.push(a),c+=e}return new Blob(o,{type:u})},n=function(){return t(document.createElement("div")).attr("contenteditable",!0).attr("aria-hidden",!0).attr("tabindex",-1).css({width:1,height:1,position:"fixed",left:-100,overflow:"hidden"})},o=function(e,n){var a,o,r,i,u,s;return i=void 0,u=void 0,r=void 0,o=void 0,a=void 0,"area"===(s=e.nodeName.toLowerCase())?(i=e.parentNode,u=i.name,!(!e.href||!u||"map"!==i.nodeName.toLowerCase())&&(r=t("img[usemap='#"+u+"']"),r.length>0&&r.is(":visible"))):(/^(input|select|textarea|button|object)$/.test(s)?(o=!e.disabled)&&(a=t(e).closest("fieldset")[0])&&(o=!a.disabled):o="a"===s?e.href||n:n,(o=o||t(e).is("[contenteditable]"))&&t(e).is(":visible"))},e=function(){function e(e,n){this._container=e,this._target=n,this._container=t(this._container),this._target=t(this._target).addClass("pastable"),this._container.on("paste",function(t){return function(e){var n,a,o,r,i,u,s,l,c,d,p,g,f;if(e.currentTarget!==e.target)return e.preventDefault();if(t._paste_event_fired=!0,null!=(null!=(c=e.originalEvent)?c.clipboardData:void 0))if(n=e.originalEvent.clipboardData,n.items)for(d=n.items,r=0,u=d.length;r<u;r++){if(o=d[r],o.type.match(/^image\//)){l=new FileReader,l.onload=function(e){return t._handleImage(e.target.result)};try{l.readAsDataURL(o.getAsFile())}catch(t){}e.preventDefault();break}"text/plain"===o.type&&o.getAsString(function(e){return t._target.trigger("pasteText",{text:e})})}else-1!==Array.prototype.indexOf.call(n.types,"text/plain")&&(f=n.getData("Text"),setTimeout(function(){return t._target.trigger("pasteText",{text:f})},1)),t._checkImagesInContainer(function(e){return t._handleImage(e)});if(n=window.clipboardData)if(null!=(p=f=n.getData("Text"))?p.length:void 0)setTimeout(function(){return t._target.trigger("pasteText",{text:f}),t._target.trigger("_pasteCheckContainerDone")},1);else{for(g=n.files,i=0,s=g.length;i<s;i++)a=g[i],t._handleImage(URL.createObjectURL(a));t._checkImagesInContainer(function(t){})}return null}}(this))}return e.prototype._target=null,e.prototype._container=null,e.mountNonInputable=function(a){var r;return r=new e(n().appendTo(a),a),t(a).on("click",function(t){return function(t){if(!o(t.target,!1))return r._container.focus()}}()),r._container.on("focus",function(e){return function(){return t(a).addClass("pastable-focus")}}()),r._container.on("blur",function(e){return function(){return t(a).removeClass("pastable-focus")}}())},e.mountTextarea=function(a){var o,r,i,u;return("undefined"!=typeof DataTransfer&&null!==DataTransfer?DataTransfer.prototype:void 0)&&(null!=(i=Object.getOwnPropertyDescriptor)&&null!=(u=i.call(Object,DataTransfer.prototype,"items"))?u.get:void 0)?this.mountContenteditable(a):(r=new e(n().insertBefore(a),a),o=!1,t(a).on("keyup",function(t){var e;return 17!==(e=t.keyCode)&&224!==e||(o=!1),null}),t(a).on("keydown",function(e){var n;return 17!==(n=e.keyCode)&&224!==n||(o=!0),null!=e.ctrlKey&&null!=e.metaKey&&(o=e.ctrlKey||e.metaKey),o&&86===e.keyCode&&(r._textarea_focus_stolen=!0,r._container.focus(),r._paste_event_fired=!1,setTimeout(function(e){return function(){if(!r._paste_event_fired)return t(a).focus(),r._textarea_focus_stolen=!1}}(),1)),null}),t(a).on("paste",function(t){return function(){}}()),t(a).on("focus",function(e){return function(){if(!r._textarea_focus_stolen)return t(a).addClass("pastable-focus")}}()),t(a).on("blur",function(e){return function(){if(!r._textarea_focus_stolen)return t(a).removeClass("pastable-focus")}}()),t(r._target).on("_pasteCheckContainerDone",function(e){return function(){return t(a).focus(),r._textarea_focus_stolen=!1}}()),t(r._target).on("pasteText",function(e){return function(e,n){var o,r,i;return i=t(a).prop("selectionStart"),r=t(a).prop("selectionEnd"),o=t(a).val(),t(a).val(""+o.slice(0,i)+n.text+o.slice(r)),t(a)[0].setSelectionRange(i+n.text.length,i+n.text.length),t(a).trigger("change")}}()))},e.mountContenteditable=function(n){return new e(n,n),t(n).on("focus",function(e){return function(){return t(n).addClass("pastable-focus")}}()),t(n).on("blur",function(e){return function(){return t(n).removeClass("pastable-focus")}}())},e.prototype._handleImage=function(t){var e;return t.match(/^webkit\-fake\-url\:\/\//)?this._target.trigger("pasteImageError",{message:"You are trying to paste an image in Safari, however we are unable to retieve its data."}):(this._target.trigger("pasteImageStart"),e=new Image,e.crossOrigin="anonymous",e.onload=function(t){return function(){var n,o,r,i;o=document.createElement("canvas"),o.width=e.width,o.height=e.height,r=o.getContext("2d"),r.drawImage(e,0,0,o.width,o.height),i=null;try{i=o.toDataURL("image/png"),n=a(i)}catch(t){}return i&&t._target.trigger("pasteImage",{blob:n,dataURL:i,width:e.width,height:e.height}),t._target.trigger("pasteImageEnd")}}(this),e.onerror=function(e){return function(){return e._target.trigger("pasteImageError",{message:"Failed to get image from: "+t,url:t}),e._target.trigger("pasteImageEnd")}}(this),e.src=t)},e.prototype._checkImagesInContainer=function(e){var n,a,o,r,i;for(i=Math.floor(1e3*Math.random()),r=this._container.find("img"),a=0,o=r.length;a<o;a++)n=r[a],n["_paste_marked_"+i]=!0;return setTimeout(function(a){return function(){var o,r,u;for(u=a._container.find("img"),o=0,r=u.length;o<r;o++)n=u[o],n["_paste_marked_"+i]||(e(n.src),t(n).remove());return a._target.trigger("_pasteCheckContainerDone")}}(this),1)},e}()}).call(this);var thepastePluginCallback;!function(t){thepastePluginCallback=function(e){function n(t){var e=t.src.substring(0,5);return"blob:"===e||"data:"===e}function a(a){i.options.editor.auto_upload&&"mceInsertContent"==a.command&&a.value&&a.value.content&&"<img"===a.value.content.substring(0,4).toLowerCase()&&($img=t(e.getBody()).find("."+u),n($img.get(0))&&(i.uploadImage($img.get(0),e),$img.removeClass(u)))}var o,r,i=wp.media.thepaste,u="";i.options.editor.auto_upload="false"!==localStorage.getItem("thepaste.auto_upload"),e.addCommand("cmd_thepaste",function(){i.options.editor.auto_upload=!i.options.editor.auto_upload,localStorage.setItem("thepaste.auto_upload",i.options.editor.auto_upload.toString()),o.active(i.options.editor.auto_upload)}),e.addButton("thepaste",{icon:"thepaste",tooltip:i.l10n.upload_pasted_images,cmd:"cmd_thepaste",onPostRender:function(){o=this},active:i.options.editor.auto_upload}),e.addButton("wp_img_thepaste_upload",{icon:"dashicon dashicons dashicons-upload thepaste-upload",tooltip:i.l10n.upload_image,onclick:function(){var t;t=e.selection.getNode(),i.uploadImage(t,e)}}),e.once("preinit",function(){e.wp&&e.wp._createToolbar&&(r=e.wp._createToolbar(["wp_img_alignleft","wp_img_aligncenter","wp_img_alignright","wp_img_alignnone","wp_img_thepaste_upload","wp_img_edit","wp_img_remove"]))}),e.on("wptoolbar",function(t){var a;"IMG"!==t.element.nodeName||e.wp.isPlaceholder(t.element)||(t.toolbar=r,a=r.$el.find(".thepaste-upload").closest(".mce-btn"),n(t.element)?a.show():a.hide())}),e.on("PastePostProcess",function(o){var r;i.options.editor.auto_upload&&(r=t(o.node).children().first(),r.is("img")&&n(r.get(0))&&(u="__pasted_image_tmp_"+Date.now(),r.addClass(u),e.once("ExecCommand",a)))}).on("BeforePastePreProcess",function(t){return t.content.match(/&lt;svg[\s\S.]*&lt;\/svg&gt;/i)&&(t.preventDefault(),t.content=""),t})},tinymce.PluginManager.add("thepaste",thepastePluginCallback)}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
