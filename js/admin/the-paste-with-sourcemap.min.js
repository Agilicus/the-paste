(function(){var t,e,n,r,a;t=window.jQuery,t.paste=function(t){var n;return"undefined"!=typeof console&&null!==console&&console.log("DEPRECATED: This method is deprecated. Please use $.fn.pastableNonInputable() instead."),n=e.mountNonInputable(t),n._container},t.fn.pastableNonInputable=function(){var n,r,a,o;for(o=this,r=0,a=o.length;r<a;r++)n=o[r],n._pastable||t(n).is("textarea, input:text, [contenteditable]")||(e.mountNonInputable(n),n._pastable=!0);return this},t.fn.pastableTextarea=function(){var n,r,a,o;for(o=this,r=0,a=o.length;r<a;r++)n=o[r],n._pastable||t(n).is(":not(textarea, input:text)")||(e.mountTextarea(n),n._pastable=!0);return this},t.fn.pastableContenteditable=function(){var n,r,a,o;for(o=this,r=0,a=o.length;r<a;r++)n=o[r],n._pastable||t(n).is(":not([contenteditable])")||(e.mountContenteditable(n),n._pastable=!0);return this},r=function(t,e){var n,r,a,o,i,u,s,l,c,f,g;if(null==e&&(e=512),!(l=t.match(/^data\:([^\;]+)\;base64\,(.+)$/)))return null;for(f=l,l=f[0],u=f[1],n=f[2],o=atob(n),a=[],c=0;c<o.length;){for(g=o.slice(c,c+e),i=new Array(g.length),s=0;s<g.length;)i[s]=g.charCodeAt(s),s++;r=new Uint8Array(i),a.push(r),c+=e}return new Blob(a,{type:u})},n=function(){return t(document.createElement("div")).attr("contenteditable",!0).attr("aria-hidden",!0).attr("tabindex",-1).css({width:1,height:1,position:"fixed",left:-100,overflow:"hidden"})},a=function(e,n){var r,a,o,i,u,s;return i=void 0,u=void 0,o=void 0,a=void 0,r=void 0,"area"===(s=e.nodeName.toLowerCase())?(i=e.parentNode,u=i.name,!(!e.href||!u||"map"!==i.nodeName.toLowerCase())&&(o=t("img[usemap='#"+u+"']"),o.length>0&&o.is(":visible"))):(/^(input|select|textarea|button|object)$/.test(s)?(a=!e.disabled)&&(r=t(e).closest("fieldset")[0])&&(a=!r.disabled):a="a"===s?e.href||n:n,(a=a||t(e).is("[contenteditable]"))&&t(e).is(":visible"))},e=function(){function e(e,n){this._container=e,this._target=n,this._container=t(this._container),this._target=t(this._target).addClass("pastable"),this._container.on("paste",function(t){return function(e){var n,r,a,o,i,u,s,l,c,f,g,d,p;if(e.currentTarget!==e.target)return e.preventDefault();if(t._paste_event_fired=!0,null!=(null!=(c=e.originalEvent)?c.clipboardData:void 0))if(n=e.originalEvent.clipboardData,n.items)for(f=n.items,o=0,u=f.length;o<u;o++){if(a=f[o],a.type.match(/^image\//)){l=new FileReader,l.onload=function(e){return t._handleImage(e.target.result)};try{l.readAsDataURL(a.getAsFile())}catch(t){}e.preventDefault();break}"text/plain"===a.type&&a.getAsString(function(e){return t._target.trigger("pasteText",{text:e})})}else-1!==Array.prototype.indexOf.call(n.types,"text/plain")&&(p=n.getData("Text"),setTimeout(function(){return t._target.trigger("pasteText",{text:p})},1)),t._checkImagesInContainer(function(e){return t._handleImage(e)});if(n=window.clipboardData)if(null!=(g=p=n.getData("Text"))?g.length:void 0)setTimeout(function(){return t._target.trigger("pasteText",{text:p}),t._target.trigger("_pasteCheckContainerDone")},1);else{for(d=n.files,i=0,s=d.length;i<s;i++)r=d[i],t._handleImage(URL.createObjectURL(r));t._checkImagesInContainer(function(t){})}return null}}(this))}return e.prototype._target=null,e.prototype._container=null,e.mountNonInputable=function(r){var o;return o=new e(n().appendTo(r),r),t(r).on("click",function(t){return function(t){if(!a(t.target,!1))return o._container.focus()}}()),o._container.on("focus",function(e){return function(){return t(r).addClass("pastable-focus")}}()),o._container.on("blur",function(e){return function(){return t(r).removeClass("pastable-focus")}}())},e.mountTextarea=function(r){var a,o,i,u;return("undefined"!=typeof DataTransfer&&null!==DataTransfer?DataTransfer.prototype:void 0)&&(null!=(i=Object.getOwnPropertyDescriptor)&&null!=(u=i.call(Object,DataTransfer.prototype,"items"))?u.get:void 0)?this.mountContenteditable(r):(o=new e(n().insertBefore(r),r),a=!1,t(r).on("keyup",function(t){var e;return 17!==(e=t.keyCode)&&224!==e||(a=!1),null}),t(r).on("keydown",function(e){var n;return 17!==(n=e.keyCode)&&224!==n||(a=!0),null!=e.ctrlKey&&null!=e.metaKey&&(a=e.ctrlKey||e.metaKey),a&&86===e.keyCode&&(o._textarea_focus_stolen=!0,o._container.focus(),o._paste_event_fired=!1,setTimeout(function(e){return function(){if(!o._paste_event_fired)return t(r).focus(),o._textarea_focus_stolen=!1}}(),1)),null}),t(r).on("paste",function(t){return function(){}}()),t(r).on("focus",function(e){return function(){if(!o._textarea_focus_stolen)return t(r).addClass("pastable-focus")}}()),t(r).on("blur",function(e){return function(){if(!o._textarea_focus_stolen)return t(r).removeClass("pastable-focus")}}()),t(o._target).on("_pasteCheckContainerDone",function(e){return function(){return t(r).focus(),o._textarea_focus_stolen=!1}}()),t(o._target).on("pasteText",function(e){return function(e,n){var a,o,i;return i=t(r).prop("selectionStart"),o=t(r).prop("selectionEnd"),a=t(r).val(),t(r).val(""+a.slice(0,i)+n.text+a.slice(o)),t(r)[0].setSelectionRange(i+n.text.length,i+n.text.length),t(r).trigger("change")}}()))},e.mountContenteditable=function(n){return new e(n,n),t(n).on("focus",function(e){return function(){return t(n).addClass("pastable-focus")}}()),t(n).on("blur",function(e){return function(){return t(n).removeClass("pastable-focus")}}())},e.prototype._handleImage=function(t){var e;return t.match(/^webkit\-fake\-url\:\/\//)?this._target.trigger("pasteImageError",{message:"You are trying to paste an image in Safari, however we are unable to retieve its data."}):(this._target.trigger("pasteImageStart"),e=new Image,e.crossOrigin="anonymous",e.onload=function(t){return function(){var n,a,o,i;a=document.createElement("canvas"),a.width=e.width,a.height=e.height,o=a.getContext("2d"),o.drawImage(e,0,0,a.width,a.height),i=null;try{i=a.toDataURL("image/png"),n=r(i)}catch(t){}return i&&t._target.trigger("pasteImage",{blob:n,dataURL:i,width:e.width,height:e.height}),t._target.trigger("pasteImageEnd")}}(this),e.onerror=function(e){return function(){return e._target.trigger("pasteImageError",{message:"Failed to get image from: "+t,url:t}),e._target.trigger("pasteImageEnd")}}(this),e.src=t)},e.prototype._checkImagesInContainer=function(e){var n,r,a,o,i;for(i=Math.floor(1e3*Math.random()),o=this._container.find("img"),r=0,a=o.length;r<a;r++)n=o[r],n["_paste_marked_"+i]=!0;return setTimeout(function(r){return function(){var a,o,u;for(u=r._container.find("img"),a=0,o=u.length;a<o;a++)n=u[a],n["_paste_marked_"+i]||(e(n.src),t(n).remove());return r._target.trigger("_pasteCheckContainerDone")}}(this),1)},e}()}).call(this);
!function(e,t){var a,n=(navigator.userAgent.indexOf("Chrome"),0);thepaste=t.thepaste=e.extend({supports:{paste:"paste"in document||"onpaste"in document||"object"==typeof window.onpaste||"onpaste"in document.createElement("DIV")},view:{},insertImage:function(e,t,a){var o,p="__thepaste_img_"+n++,i=new Image,s=new mOxie.File(null,{data:e}),l="";l+='<div class="thepaste-image-placeholder" id="'+p+'" contenteditable="false">',l+='<img class="alignnone size-full" src="'+e+'" />',l+="</div>",i.onload=function(){thepaste.uploadImage(s,o)},i.src=e,a.insertContent(l),o=a.$("#"+p)},uploadImage:function(e,t){var n=e.type,o=thepaste.options.mime_types.convert[n],p=thepaste.l10n.pasted+"."+o,i=e instanceof mOxie.File?e:e.getAsBlob(n,thepaste.options.jpeg_quality),s=function(){a.uploader.uploader.uploader.addFile(i),a.close()};i.name=p,i.type=n,a?(a.state().reset(),s()):(a=wp.media.editor.open(window.wpActiveEditor,{frame:"post",state:"insert",title:thepaste.l10n.copy_paste,multiple:!1}),a.uploader.uploader&&a.uploader.uploader.ready?s():a.on("uploader:ready",s)),a.uploader.uploader.uploader.bind("UploadProgress",function(e){t.attr("data-progress",e.total.percent)}),a.uploader.uploader.uploader.bind("FileUploaded",function(e,a){t.replaceWith('<img class="alignnone wp-image-'+a.attachment.id+' size-full" src="'+a.attachment.changed.url+'" />')}),a.uploader.uploader.uploader.bind("Error",function(e,t){console.log(e,t)})},clipboardHasImage:function(t){var a=!1;return t.items?(e.each(t.items,function(e,t){if(t.type in thepaste.options.mime_types.paste)return a=!0,!1}),a):t.types?(e.each(thepaste.options.mime_types.paste,function(e,n){if(t.types.indexOf(e)>-1)return a=!0,!1}),a):(console.log(t),null)}},thepaste)}(jQuery,wp.media);
!function(e,t){var a=wp.media.thepaste.l10n;navigator.userAgent.indexOf("Chrome");e.extend(wp.Uploader.prototype,{success:function(e){}}),_.extend(wp.media.view.MediaFrame.Select.prototype,{_parentInitialize:wp.media.view.MediaFrame.Select.prototype.initialize,initialize:function(){this._parentInitialize.apply(this,arguments),this.bindPasteHandlers()},_parentBrowseRouter:wp.media.view.MediaFrame.Select.prototype.browseRouter,browseRouter:function(e){this._parentBrowseRouter.apply(this,arguments),wp.media.thepaste.supports.paste&&e.set({pasteboard:{text:a.copy_paste,priority:35}})},bindPasteHandlers:function(){var e=!1;this.on("content:render close",function(t){e&&"function"==typeof e.dismiss&&e.dismiss(),void 0!==t&&(e=t)},this),this.on("content:create:pasteboard",this.contentCreatePasteboard,this),this.on("content:render:pasteboard",this.contentRenderGrabber,this),frame=this},contentCreatePasteboard:function(e){this.state();this.currentPasteView=e.view=new wp.media.thepaste.view.DataSourceImageGrabber({controller:this,grabber:wp.media.thepaste.view.Pasteboard}),this.listenTo(this.currentPasteView.uploader,"action:uploaded:dataimage",this.uploadedDataImage)},contentRenderGrabber:function(e){e.startGrabbing()},uploadedDataImage:function(e){this.stopListening(this.currentPasteView.uploader,"action:uploaded:dataimage");var t={view:null};this.browseContent(t),this.content.set(t.view),this.router.get().select("browse")}}),_.extend(wp.media.view.AttachmentsBrowser.prototype,{_parentInitialize:wp.media.view.AttachmentsBrowser.prototype.initialize,initialize:function(){var e,t=this;this._parentInitialize.apply(this,arguments),this.thepaste={paste:{grabber:!1,modal:!1,mode:"paste"},current:!1},this.controller instanceof wp.media.view.MediaFrame.Select||wp.media.thepaste.supports.paste&&(e=new wp.media.view.Button({text:a.copy_paste,className:"grabber-button",priority:-64,click:function(){t.thepaste.active=t.thepaste.paste,t.pasteOpen(a.copy_paste)}}),this.thepaste.paste.grabber=new wp.media.thepaste.view.DataSourceImageGrabber({controller:this.controller,grabber:wp.media.thepaste.view.Pasteboard,wpuploader:this.controller.uploader.uploader.uploader}),this.toolbar.set("pasteModeButton",e.render()))},thepasteUploaded:function(e){this.thepaste.active.grabber.dismiss(),this.thepaste.modal.close(),this.thepasteClose()},thepasteError:function(e){console.log("error",e)},pasteOpen:function(e){var t=this;this.thepaste.modal=new wp.media.view.Modal({controller:this,title:e}),this.thepaste.modal.content(this.thepaste.active.grabber),this.thepaste.modal.open(),this.thepaste.modal.on("close",function(){t.thepasteClose.apply(t),t.thepaste.active.grabber.stopGrabbing()}),this.thepaste.active.grabber.startGrabbing(),this.listenTo(this.thepaste.active.grabber.uploader,"action:uploaded:dataimage",this.thepasteUploaded),this.listenTo(this.thepaste.active.grabber.uploader,"error:uploaded:dataimage",this.thepasteError)},thepasteClose:function(){this.controller.deactivateMode(this.thepaste.active.mode).activateMode("edit"),this.stopListening(this.thepaste.active.grabber.uploader,"action:uploaded:dataimage"),this.stopListening(this.thepaste.active.grabber.uploader,"error:uploaded:dataimage")}})}(jQuery,window);
!function(t,e,i){var a=wp.media.thepaste,s=(wp.media.view.Button,wp.media.view.Modal,a.l10n);wp.media.thepaste.view.DataSourceImageUploader=wp.media.View.extend({template:wp.template("thepaste-uploader"),className:"thepaste-uploader",controller:null,image:null,$discardBtn:null,$uploadBtn:null,uploader:null,events:{'click [data-action="upload"]':"uploadImage",'click [data-action="discard"]':"discardImage"},initialize:function(){wp.media.View.prototype.initialize.apply(this,arguments),_.defaults(this.options,{defaultFileName:s.image});new wp.media.View({tagName:"div",className:"instruments",controller:this.controller});this.uploader=this.options.uploder},setImageData:function(t){var e=this.$imageContainer.html("").get(0),s=this,r=t.match(/data:(image\/(\w+));/)[1];return a.options.mime_types.convert[r]||(r=this.options.defaultFileFormat),this.image&&this.image.destroy(),this.image=new i.Image,this.image.onload=function(){var t=s.getUploader().getOption("resize"),i=Math.max(t.width/this.width,t.height/this.height);!!t&&i<1&&this.downsize(this.width*i,this.height*i),this.embed(e)},this.image.bind("Resize",function(t){this.embed(e)}),this.image.load(t),this.$imageContainer&&this.$imageContainer.append(this.image),this.$('[data-setting="format"] input[value="'+r+'"]').prop("checked",!0),this.disabled(!1),this},render:function(){return wp.media.View.prototype.render.apply(this,arguments),this.$imageContainer=this.$(".image-container"),this.$discardBtn=this.$('[data-action="discard"]'),this.$uploadBtn=this.$('[data-action="upload"]'),this.$('[data-setting="title"]').val(this.options.defaultFileName),this},discardImage:function(){this.trigger("action:discard:dataimage",this),this.unbindUploaderEvents()},uploadImage:function(){var t=this.$('[data-setting="format"] :checked').val(),e=a.options.mime_types.convert[t],i=this.$('input[data-setting="title"]').val()+"."+e,s=this.image.getAsBlob(t,a.options.jpeg_quality);this.bindUploaderEvents(),s.detach(s.getSource()),s.name=i,s.type=t,this.getUploader().addFile(s,i),this.disabled(!0),this.trigger("action:upload:dataimage",this)},show:function(){return this.$el.show(),this},hide:function(){return this.$el.hide(),this},disabled:function(t){this.$discardBtn.prop("disabled",t),this.$uploadBtn.prop("disabled",t)},_uploadSuccessHandler:function(){this.trigger("action:uploaded:dataimage"),this.disabled(!1),this.unbindUploaderEvents()},_uploadErrorHandler:function(){this.trigger("error:uploaded:dataimage"),this.disabled(!1),this.unbindUploaderEvents()},bindUploaderEvents:function(){this.getUploader().bind("FileUploaded",this._uploadSuccessHandler,this),this.getUploader().bind("Error",this._uploadErrorHandler,this)},unbindUploaderEvents:function(){this.getUploader().unbind("FileUploaded",this._uploadSuccessHandler,this),this.getUploader().unbind("Error",this._uploadErrorHandler,this)},getUploader:function(){return this.controller.uploader.uploader.uploader}}),wp.media.thepaste.view.Pasteboard=wp.media.View.extend({template:wp.template("thepaste-pasteboard"),className:"thepaste-pasteboard",controller:null,action:"paste",$pasteboard:null,render:function(){var t=this;return wp.media.View.prototype.render.apply(this,arguments),this.$pasteboard=this.$(".injector").pastableContenteditable(),this.$message=this.$(".message"),this.$pasteboard.on("click",function(){t.show_message("")}),this},start:function(){var e,i=this;return this.imagePasted=!1,this.$pasteboard.on("paste",function(t){e=wp.media.thepaste.clipboardHasImage(t.originalEvent.clipboardData)}).on("pasteText",function(a,r){e||i.imagePasted||(i.show_message(s.paste_error_no_image),t(this).html(""))}).on("pasteImage",function(t,e){i.imagePasted||(i.trigger("action:create:dataimage",this,e.dataURL),i.imagePasted=!0)}).on("pasteImageError",function(e,a){i.show_message(s.paste_error),t(this).html("")}),setTimeout(function(){i.$pasteboard.get(0).focus()},1),this},stop:function(){return this.$pasteboard.off("pasteImage").off("pasteImageError").off("pasteText"),this},show:function(){return this.$el.show(),this},hide:function(){return this.$el.hide(),this},show_message:function(t){this.$message.text(t)}}),wp.media.thepaste.view.DataSourceImageGrabber=wp.media.View.extend({template:wp.template("thepaste-grabber"),className:"thepaste-grabber",grabber:null,uploader:null,initialize:function(){var t=wp.media.View.prototype.initialize.apply(this,arguments);return _.defaults(this.options,{wpuploader:null,defaultFileName:s.pasted,defaultFileFormat:"image/png",title:s.copy_paste}),this.grabber=new this.options.grabber({controller:this.controller}),this.uploader=new wp.media.thepaste.view.DataSourceImageUploader({controller:this.controller,uploder:this.options.wpuploader,defaultFileName:this.options.defaultFileName,defaultFileFormat:this.options.defaultFileFormat}),this.render(),this.listenTo(this.grabber,"action:create:dataimage",this.imageCreated),this.listenTo(this.uploader,"action:discard:dataimage",this.startGrabbing),t},render:function(){return wp.media.View.prototype.render.apply(this,arguments),this.$(".content").append(this.grabber.render().$el).append(this.uploader.render().$el),this},imageCreated:function(t,e){this.grabber.stop().hide(),this.uploader.show().setImageData(e)},startGrabbing:function(){return this.uploader.hide(),this.grabber.show().start(),this},stopGrabbing:function(){return this.grabber.stop(),this},getAction:function(){return this.grabber.action},dismiss:function(){return this.grabber.stop(),this}})}(jQuery,window,mOxie);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
