(function(){var e,t,a,i,n;e=window.jQuery,e.paste=function(e){var a;return"undefined"!=typeof console&&null!==console&&console.log("DEPRECATED: This method is deprecated. Please use $.fn.pastableNonInputable() instead."),a=t.mountNonInputable(e),a._container},e.fn.pastableNonInputable=function(){var a,i,n,r;for(r=this,i=0,n=r.length;i<n;i++)a=r[i],a._pastable||e(a).is("textarea, input:text, [contenteditable]")||(t.mountNonInputable(a),a._pastable=!0);return this},e.fn.pastableTextarea=function(){var a,i,n,r;for(r=this,i=0,n=r.length;i<n;i++)a=r[i],a._pastable||e(a).is(":not(textarea, input:text)")||(t.mountTextarea(a),a._pastable=!0);return this},e.fn.pastableContenteditable=function(){var a,i,n,r;for(r=this,i=0,n=r.length;i<n;i++)a=r[i],a._pastable||e(a).is(":not([contenteditable])")||(t.mountContenteditable(a),a._pastable=!0);return this},i=function(e,t){var a,i,n,r,o,s,l,p,d,u,h;if(null==t&&(t=512),!(p=e.match(/^data\:([^\;]+)\;base64\,(.+)$/)))return null;for(u=p,p=u[0],s=u[1],a=u[2],r=atob(a),n=[],d=0;d<r.length;){for(h=r.slice(d,d+t),o=new Array(h.length),l=0;l<h.length;)o[l]=h.charCodeAt(l),l++;i=new Uint8Array(o),n.push(i),d+=t}return new Blob(n,{type:s})},a=function(){return e(document.createElement("div")).attr("contenteditable",!0).attr("aria-hidden",!0).attr("tabindex",-1).css({width:1,height:1,position:"fixed",left:-100,overflow:"hidden"})},n=function(t,a){var i,n,r,o,s,l;return o=void 0,s=void 0,r=void 0,n=void 0,i=void 0,"area"===(l=t.nodeName.toLowerCase())?(o=t.parentNode,s=o.name,!(!t.href||!s||"map"!==o.nodeName.toLowerCase())&&(r=e("img[usemap='#"+s+"']"),r.length>0&&r.is(":visible"))):(/^(input|select|textarea|button|object)$/.test(l)?(n=!t.disabled)&&(i=e(t).closest("fieldset")[0])&&(n=!i.disabled):n="a"===l?t.href||a:a,(n=n||e(t).is("[contenteditable]"))&&e(t).is(":visible"))},t=function(){function t(t,a){this._container=t,this._target=a,this._container=e(this._container),this._target=e(this._target).addClass("pastable"),this._container.on("paste",function(e){return function(t){var a,i,n,r,o,s,l,p,d,u,h,c,g;if(t.currentTarget!==t.target)return t.preventDefault();if(e._paste_event_fired=!0,null!=(null!=(d=t.originalEvent)?d.clipboardData:void 0))if(a=t.originalEvent.clipboardData,a.items)for(u=a.items,r=0,s=u.length;r<s;r++){if(n=u[r],n.type.match(/^image\//)){p=new FileReader,p.onload=function(t){return e._handleImage(t.target.result)};try{p.readAsDataURL(n.getAsFile())}catch(e){}t.preventDefault();break}"text/plain"===n.type&&n.getAsString(function(t){return e._target.trigger("pasteText",{text:t})})}else-1!==Array.prototype.indexOf.call(a.types,"text/plain")&&(g=a.getData("Text"),setTimeout(function(){return e._target.trigger("pasteText",{text:g})},1)),e._checkImagesInContainer(function(t){return e._handleImage(t)});if(a=window.clipboardData)if(null!=(h=g=a.getData("Text"))?h.length:void 0)setTimeout(function(){return e._target.trigger("pasteText",{text:g}),e._target.trigger("_pasteCheckContainerDone")},1);else{for(c=a.files,o=0,l=c.length;o<l;o++)i=c[o],e._handleImage(URL.createObjectURL(i));e._checkImagesInContainer(function(e){})}return null}}(this))}return t.prototype._target=null,t.prototype._container=null,t.mountNonInputable=function(i){var r;return r=new t(a().appendTo(i),i),e(i).on("click",function(e){return function(e){if(!n(e.target,!1))return r._container.focus()}}()),r._container.on("focus",function(t){return function(){return e(i).addClass("pastable-focus")}}()),r._container.on("blur",function(t){return function(){return e(i).removeClass("pastable-focus")}}())},t.mountTextarea=function(i){var n,r,o,s;return("undefined"!=typeof DataTransfer&&null!==DataTransfer?DataTransfer.prototype:void 0)&&(null!=(o=Object.getOwnPropertyDescriptor)&&null!=(s=o.call(Object,DataTransfer.prototype,"items"))?s.get:void 0)?this.mountContenteditable(i):(r=new t(a().insertBefore(i),i),n=!1,e(i).on("keyup",function(e){var t;return 17!==(t=e.keyCode)&&224!==t||(n=!1),null}),e(i).on("keydown",function(t){var a;return 17!==(a=t.keyCode)&&224!==a||(n=!0),null!=t.ctrlKey&&null!=t.metaKey&&(n=t.ctrlKey||t.metaKey),n&&86===t.keyCode&&(r._textarea_focus_stolen=!0,r._container.focus(),r._paste_event_fired=!1,setTimeout(function(t){return function(){if(!r._paste_event_fired)return e(i).focus(),r._textarea_focus_stolen=!1}}(),1)),null}),e(i).on("paste",function(e){return function(){}}()),e(i).on("focus",function(t){return function(){if(!r._textarea_focus_stolen)return e(i).addClass("pastable-focus")}}()),e(i).on("blur",function(t){return function(){if(!r._textarea_focus_stolen)return e(i).removeClass("pastable-focus")}}()),e(r._target).on("_pasteCheckContainerDone",function(t){return function(){return e(i).focus(),r._textarea_focus_stolen=!1}}()),e(r._target).on("pasteText",function(t){return function(t,a){var n,r,o;return o=e(i).prop("selectionStart"),r=e(i).prop("selectionEnd"),n=e(i).val(),e(i).val(""+n.slice(0,o)+a.text+n.slice(r)),e(i)[0].setSelectionRange(o+a.text.length,o+a.text.length),e(i).trigger("change")}}()))},t.mountContenteditable=function(a){return new t(a,a),e(a).on("focus",function(t){return function(){return e(a).addClass("pastable-focus")}}()),e(a).on("blur",function(t){return function(){return e(a).removeClass("pastable-focus")}}())},t.prototype._handleImage=function(e){var t;return e.match(/^webkit\-fake\-url\:\/\//)?this._target.trigger("pasteImageError",{message:"You are trying to paste an image in Safari, however we are unable to retieve its data."}):(this._target.trigger("pasteImageStart"),t=new Image,t.crossOrigin="anonymous",t.onload=function(e){return function(){var a,n,r,o;n=document.createElement("canvas"),n.width=t.width,n.height=t.height,r=n.getContext("2d"),r.drawImage(t,0,0,n.width,n.height),o=null;try{o=n.toDataURL("image/png"),a=i(o)}catch(e){}return o&&e._target.trigger("pasteImage",{blob:a,dataURL:o,width:t.width,height:t.height}),e._target.trigger("pasteImageEnd")}}(this),t.onerror=function(t){return function(){return t._target.trigger("pasteImageError",{message:"Failed to get image from: "+e,url:e}),t._target.trigger("pasteImageEnd")}}(this),t.src=e)},t.prototype._checkImagesInContainer=function(t){var a,i,n,r,o;for(o=Math.floor(1e3*Math.random()),r=this._container.find("img"),i=0,n=r.length;i<n;i++)a=r[i],a["_paste_marked_"+o]=!0;return setTimeout(function(i){return function(){var n,r,s;for(s=i._container.find("img"),n=0,r=s.length;n<r;n++)a=s[n],a["_paste_marked_"+o]||(t(a.src),e(a).remove());return i._target.trigger("_pasteCheckContainerDone")}}(this),1)},t}()}).call(this),function(e,t,a){var i=(navigator.userAgent.indexOf("Chrome"),0);thepaste=t.thepaste=e.extend({supports:{paste:"paste"in document||"onpaste"in document||"object"==typeof window.onpaste||"onpaste"in document.createElement("DIV")},view:{},uploadImage:function(t,n,r){var o="__thepaste_box_"+i++,s=e(t).wrap('<div id="'+o+'" data-progress="0" class="thepaste-image-placeholder" contenteditable="false"></div>').parent();t.onload=function(){e(n.$("#"+o)).width(this.naturalWidth),e(n.$("#"+o)).height(this.naturalHeight)};var l,p,d=t.src,u=function(t){var i=t.match(/^data\:([^\;]+)\;/)[1],r=new a.Blob(null,{data:t}),s=thepaste.options.mime_types.convert[i],l=e('#post [name="post_title"]#title').val();void 0===s&&console.trace("Won't upload, bad mime type: "+i),void 0!==l?(l=l.replace(/([\^\!\?<>:"'\/\|\*ยง])/g,"").replace(/ +/g," "),r.name=thepaste.l10n.pasted_into+" "+l+"."+s):r.name=thepaste.l10n.pasted+"."+s,r.type=i;var u=function(){p.uploader.uploader.uploader.addFile(r)};p?(p.state().reset(),u()):(p=wp.media.editor.open(window.wpActiveEditor,{frame:"post",state:"insert",title:thepaste.l10n.copy_paste,multiple:!1}),p.close(),p.uploader.uploader&&p.uploader.uploader.ready?u():p.on("uploader:ready",u)),p.uploader.uploader.uploader.bind("UploadProgress",function(e){n.$("#"+o).attr("data-progress",e.total.percent)}),p.uploader.uploader.uploader.bind("FileUploaded",function(t,a){var i=n.$("#"+o),r='<img class="alignnone wp-image-'+a.attachment.id+' size-full" src="'+a.attachment.changed.url+'" />';i.replaceWith(r),n.$('img[src="'+d+'"]').each(function(){e(this).replaceWith(r)})}),p.uploader.uploader.uploader.bind("Error",function(e,t){console.log(e,t)})};return"blob:"===d.substr(0,5)?(l=new XMLHttpRequest,l.responseType="blob",l.onreadystatechange=function(){var e;4==l.readyState&&(e=new FileReader,e.onload=function(){u(e.result)},e.readAsDataURL(new Blob([l.response],{type:"image/png"})))},l.open("GET",d),l.send(null)):"data:"===d.substr(0,5)&&u(d),s},clipboardHasImage:function(t){var a=!1;return t.items?(e.each(t.items,function(e,t){if(t.type in thepaste.options.mime_types.paste)return a=!0,!1}),a):t.types?(e.each(thepaste.options.mime_types.paste,function(e,i){if(t.types.indexOf(e)>-1)return a=!0,!1}),a):null}},thepaste)}(jQuery,wp.media,mOxie),function(e,t){var a=wp.media.thepaste.l10n;e.extend(wp.Uploader.prototype,{success:function(e){}}),_.extend(wp.media.view.MediaFrame.Select.prototype,{_parentInitialize:wp.media.view.MediaFrame.Select.prototype.initialize,initialize:function(){this._parentInitialize.apply(this,arguments),this.bindPasteHandlers()},_parentBrowseRouter:wp.media.view.MediaFrame.Select.prototype.browseRouter,browseRouter:function(e){this._parentBrowseRouter.apply(this,arguments),wp.media.thepaste.supports.paste&&e.set({pasteboard:{text:a.copy_paste,priority:35}})},bindPasteHandlers:function(){var e=!1;this.on("content:render close",function(t){e&&"function"==typeof e.dismiss&&e.dismiss(),void 0!==t&&(e=t)},this),this.on("content:create:pasteboard",this.contentCreatePasteboard,this),this.on("content:render:pasteboard",this.contentRenderGrabber,this),this.on("content:create:dataimage",this.contentRenderGrabber,this),frame=this},contentCreatePasteboard:function(e){this.state();this.currentPasteView=e.view=new wp.media.thepaste.view.DataSourceImageGrabber({controller:this,grabber:wp.media.thepaste.view.Pasteboard}),this.listenTo(this.currentPasteView.uploader,"action:uploaded:dataimage",this.uploadedDataImage)},contentRenderGrabber:function(e){e.startGrabbing()},uploadedDataImage:function(e){this.stopListening(this.currentPasteView.uploader,"action:uploaded:dataimage");var t={view:null};this.browseContent(t),this.content.set(t.view),this.router.get().select("browse")},imagePasted:function(){console.log(this)}}),_.extend(wp.media.view.AttachmentsBrowser.prototype,{_parentInitialize:wp.media.view.AttachmentsBrowser.prototype.initialize,initialize:function(){var e,t=this;this._parentInitialize.apply(this,arguments),this.thepaste={paste:{grabber:!1,modal:!1,mode:"paste"},current:!1},this.controller instanceof wp.media.view.MediaFrame.Select||wp.media.thepaste.supports.paste&&(e=new wp.media.view.Button({text:a.copy_paste,className:"grabber-button",priority:-64,click:function(){t.thepaste.active=t.thepaste.paste,t.thepasteOpen(a.copy_paste)}}),this.thepaste.paste.grabber=new wp.media.thepaste.view.DataSourceImageGrabber({controller:this.controller,grabber:wp.media.thepaste.view.Pasteboard,wpuploader:this.controller.uploader.uploader.uploader}),this.toolbar.set("pasteModeButton",e.render()))},thepasteUploaded:function(e){this.thepaste.active.grabber.dismiss(),this.thepaste.modal.close(),this.thepasteClose()},thepasteError:function(e){console.log("error",e)},thepasteOpen:function(e){var t=this;this.thepaste.modal=new wp.media.view.Modal({controller:this,title:e}),this.thepaste.modal.content(this.thepaste.active.grabber),this.thepaste.modal.open(),this.thepaste.modal.on("close",function(){t.thepasteClose.apply(t),t.thepaste.active.grabber.stopGrabbing()}),this.thepaste.active.grabber.startGrabbing(),this.listenTo(this.thepaste.active.grabber.uploader,"action:uploaded:dataimage",this.thepasteUploaded),this.listenTo(this.thepaste.active.grabber.uploader,"error:uploaded:dataimage",this.thepasteError)},thepasteClose:function(){this.controller.deactivateMode(this.thepaste.active.mode).activateMode("edit"),this.stopListening(this.thepaste.active.grabber.uploader,"action:uploaded:dataimage"),this.stopListening(this.thepaste.active.grabber.uploader,"error:uploaded:dataimage")}})}(jQuery,window),function(e,t,a){var i=wp.media.thepaste,n=(wp.media.view.Button,wp.media.view.Modal,i.l10n);wp.media.thepaste.view.DataSourceImageUploader=wp.media.View.extend({template:wp.template("thepaste-uploader"),className:"thepaste-uploader",controller:null,image:null,$discardBtn:null,$uploadBtn:null,uploader:null,events:{'click [data-action="upload"]':"uploadImage",'click [data-action="discard"]':"discardImage"},initialize:function(){wp.media.View.prototype.initialize.apply(this,arguments),_.defaults(this.options,{defaultFileName:n.image});new wp.media.View({tagName:"div",className:"instruments",controller:this.controller});this.uploader=this.options.uploder},setImageData:function(e){var t=this.$imageContainer.html("").get(0),n=this,r=e.match(/data:(image\/(\w+));/)[1];return i.options.mime_types.convert[r]||(r=this.options.defaultFileFormat),this.image&&this.image.destroy(),this.image=new a.Image,this.image.onload=function(){var e=n.getUploader().getOption("resize"),a=Math.max(e.width/this.width,e.height/this.height);!!e&&a<1&&this.downsize(this.width*a,this.height*a),this.embed(t)},this.image.load(e),this.$imageContainer&&this.$imageContainer.append(this.image),this.$('[data-setting="format"] input[value="'+r+'"]').prop("checked",!0),this.disabled(!1),this},render:function(){return wp.media.View.prototype.render.apply(this,arguments),this.$imageContainer=this.$(".image-container"),this.$discardBtn=this.$('[data-action="discard"]'),this.$uploadBtn=this.$('[data-action="upload"]'),this.$('[data-setting="title"]').val(this.options.defaultFileName),this},discardImage:function(){this.trigger("action:discard:dataimage",this),this.unbindUploaderEvents()},uploadImage:function(){var e=this.$('[data-setting="format"] :checked').val(),t=i.options.mime_types.convert[e],a=this.$('input[data-setting="title"]').val()+"."+t,n=this.image.getAsBlob(e,i.options.jpeg_quality);this.bindUploaderEvents(),n.detach(n.getSource()),n.name=a,n.type=e,this.getUploader().addFile(n,a),this.disabled(!0),this.trigger("action:upload:dataimage",this)},show:function(){return this.$el.show(),this},hide:function(){return this.$el.hide(),this},disabled:function(e){this.$discardBtn.prop("disabled",e),this.$uploadBtn.prop("disabled",e)},_uploadSuccessHandler:function(){this.trigger("action:uploaded:dataimage"),this.disabled(!1),this.unbindUploaderEvents()},_uploadErrorHandler:function(){this.trigger("error:uploaded:dataimage"),this.disabled(!1),this.unbindUploaderEvents()},bindUploaderEvents:function(){this.getUploader().bind("FileUploaded",this._uploadSuccessHandler,this),this.getUploader().bind("Error",this._uploadErrorHandler,this)},unbindUploaderEvents:function(){this.getUploader().unbind("FileUploaded",this._uploadSuccessHandler,this),this.getUploader().unbind("Error",this._uploadErrorHandler,this)},getUploader:function(){return this.controller.uploader.uploader.uploader}}),wp.media.thepaste.view.Pasteboard=wp.media.View.extend({template:wp.template("thepaste-pasteboard"),className:"thepaste-pasteboard",controller:null,action:"paste",$pasteboard:null,render:function(){var e=this;return wp.media.View.prototype.render.apply(this,arguments),this.$pasteboard=this.$(".injector").pastableContenteditable(),this.$message=this.$(".message"),this.$pasteboard.on("click",function(){e.show_message("")}),this},start:function(){var t,a=this;return this.imagePasted=!1,this.$pasteboard.on("paste",function(e){t=wp.media.thepaste.clipboardHasImage(e.originalEvent.clipboardData)}).on("pasteText",function(i,r){t||a.imagePasted||(a.show_message(n.paste_error_no_image),e(this).html(""))}).on("pasteImage",function(e,t){a.imagePasted||(a.trigger("action:create:dataimage",this,t.dataURL),a.imagePasted=!0)}).on("pasteImageError",function(t,i){a.show_message(n.paste_error),e(this).html("")}),setTimeout(function(){a.$pasteboard.get(0).focus()},1),this},stop:function(){return this.$pasteboard.off("pasteImage").off("pasteImageError").off("pasteText"),this},show:function(){return this.$el.show(),this},hide:function(){return this.$el.hide(),this},show_message:function(e){this.$message.text(e)}}),wp.media.thepaste.view.DataSourceImageGrabber=wp.media.View.extend({template:wp.template("thepaste-grabber"),className:"thepaste-grabber",grabber:null,uploader:null,initialize:function(){var e=wp.media.View.prototype.initialize.apply(this,arguments);return _.defaults(this.options,{wpuploader:null,defaultFileName:n.pasted,defaultFileFormat:"image/png",title:n.copy_paste}),this.grabber=new this.options.grabber({controller:this.controller}),this.uploader=new wp.media.thepaste.view.DataSourceImageUploader({controller:this.controller,uploder:this.options.wpuploader,defaultFileName:this.options.defaultFileName,defaultFileFormat:this.options.defaultFileFormat}),this.render(),this.listenTo(this.grabber,"action:create:dataimage",this.imageCreated),this.listenTo(this.uploader,"action:discard:dataimage",this.startGrabbing),e},render:function(){return wp.media.View.prototype.render.apply(this,arguments),this.$(".content").append(this.grabber.render().$el).append(this.uploader.render().$el),this},imageCreated:function(e,t){this.grabber.stop().hide(),this.uploader.show().setImageData(t)},startGrabbing:function(){return this.uploader.hide(),this.grabber.show().start(),this},stopGrabbing:function(){return this.grabber.stop(),this},getAction:function(){return this.grabber.action},dismiss:function(){return this.grabber.stop(),this}})}(jQuery,window,mOxie);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
